[gd_scene load_steps=14 format=2]

[ext_resource path="res://Materiales/Espejo/Metal012_1K_Roughness.jpg" type="Texture" id=1]
[ext_resource path="res://Materiales/Espejo/Metal012_1K_Displacement.jpg" type="Texture" id=2]
[ext_resource path="res://Materiales/Espejo/Metal012_1K_Metalness.jpg" type="Texture" id=3]
[ext_resource path="res://Materiales/Espejo/Metal012_1K_Color.jpg" type="Texture" id=4]
[ext_resource path="res://Materiales/Espejo/Metal012_1K_NormalDX.jpg" type="Texture" id=5]
[ext_resource path="res://AnimationPlayer.gd" type="Script" id=6]

[sub_resource type="Shader" id=2]
resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0: hint_albedo;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_subsurfaceior = float(1.399999976158142);
	float node1_in5_subsurfaceanisotropy = float(0.0);
	float node1_in6_metallic = float(0.0);
	float node1_in7_specular = float(0.5);
	float node1_in8_speculartint = float(0.0);
	float node1_in9_roughness = float(0.5);
	float node1_in10_anisotropic = float(0.0);
	float node1_in11_anisotropicrotation = float(0.0);
	float node1_in12_sheen = float(0.0);
	float node1_in13_sheentint = float(0.5);
	float node1_in14_clearcoat = float(0.0);
	float node1_in15_clearcoatroughness = float(0.029999999329447746);
	float node1_in16_ior = float(1.4500000476837158);
	float node1_in17_transmission = float(0.0);
	float node1_in18_transmissionroughness = float(0.0);
	vec4 node1_in19_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in20_emissionstrength = float(1.0);
	float node1_in21_alpha = float(1.0);
	vec3 node1_in22_normal = NORMAL;
	vec3 node1_in23_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in24_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in6_metallic, node1_in7_specular,
		node1_in9_roughness, node1_in14_clearcoat, node1_in15_clearcoatroughness,
		node1_in10_anisotropic, node1_in17_transmission, node1_in16_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in22_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in24_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource type="ShaderMaterial" id=101]
shader = SubResource( 2 )

[sub_resource type="ArrayMesh" id=77]
resource_name = "Cube026"
surfaces/0 = {
"aabb": AABB( -3.49659, -1, -1, 4.49659, 2.00001, 2 ),
"array_data": PoolByteArray( 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 128, 191, 129, 117, 0, 127, 178, 58, 231, 57, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 128, 191, 129, 117, 0, 127, 6, 57, 231, 57, 33, 200, 95, 192, 113, 0, 69, 191, 223, 78, 74, 191, 129, 117, 0, 127, 55, 57, 0, 60, 33, 200, 95, 192, 142, 230, 72, 63, 223, 78, 74, 191, 129, 117, 0, 127, 132, 58, 0, 60, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 128, 191, 127, 127, 0, 127, 6, 57, 231, 57, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 128, 191, 127, 127, 0, 127, 178, 58, 231, 57, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 191, 127, 127, 0, 127, 178, 58, 59, 56, 0, 0, 128, 63, 0, 0, 128, 191, 0, 0, 128, 191, 127, 127, 0, 127, 6, 57, 59, 56, 0, 0, 128, 63, 0, 0, 128, 191, 0, 0, 128, 191, 127, 0, 126, 1, 0, 60, 59, 56, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 191, 127, 0, 126, 1, 0, 60, 29, 53, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 63, 127, 0, 126, 1, 83, 58, 29, 53, 0, 0, 128, 63, 0, 0, 128, 191, 0, 0, 128, 63, 127, 0, 127, 127, 83, 58, 59, 56, 0, 0, 128, 63, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 0, 127, 0, 0, 0, 60, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 0, 127, 178, 50, 0, 60, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 0, 127, 178, 50, 84, 58, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 0, 127, 0, 0, 84, 58, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 128, 191, 0, 129, 0, 63, 178, 50, 84, 58, 0, 0, 128, 63, 0, 0, 128, 191, 0, 0, 128, 191, 0, 129, 0, 63, 178, 50, 0, 60, 0, 0, 128, 63, 0, 0, 128, 191, 0, 0, 128, 63, 0, 129, 0, 63, 178, 54, 0, 60, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 128, 63, 0, 129, 0, 63, 178, 54, 84, 58, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 191, 0, 127, 0, 63, 178, 54, 59, 56, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 128, 191, 0, 127, 0, 63, 178, 54, 230, 57, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 128, 63, 0, 127, 0, 63, 6, 57, 230, 57, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 63, 0, 127, 0, 63, 6, 57, 59, 56, 33, 200, 95, 192, 142, 230, 72, 63, 32, 152, 67, 63, 238, 148, 127, 127, 178, 50, 58, 56, 33, 200, 95, 192, 142, 230, 72, 63, 223, 78, 74, 191, 238, 148, 127, 127, 243, 53, 58, 56, 57, 185, 219, 191, 93, 226, 248, 62, 242, 154, 255, 190, 238, 148, 127, 127, 118, 53, 116, 53, 57, 185, 219, 191, 93, 226, 248, 62, 89, 139, 223, 62, 238, 148, 127, 127, 203, 51, 116, 53, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 128, 63, 246, 0, 0, 127, 0, 0, 84, 58, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 128, 63, 246, 0, 0, 127, 178, 50, 84, 58, 33, 200, 95, 192, 142, 230, 72, 63, 32, 152, 67, 63, 246, 0, 0, 127, 250, 49, 58, 56, 33, 200, 95, 192, 113, 0, 69, 191, 32, 152, 67, 63, 246, 0, 0, 127, 44, 38, 58, 56, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 128, 63, 246, 116, 0, 63, 6, 57, 230, 57, 0, 0, 128, 191, 0, 0, 128, 63, 0, 0, 128, 191, 246, 116, 0, 63, 178, 54, 230, 57, 33, 200, 95, 192, 142, 230, 72, 63, 223, 78, 74, 191, 246, 116, 0, 63, 12, 55, 0, 60, 33, 200, 95, 192, 142, 230, 72, 63, 32, 152, 67, 63, 246, 116, 0, 63, 211, 56, 0, 60, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 128, 191, 246, 140, 0, 63, 178, 50, 84, 58, 0, 0, 128, 191, 0, 0, 128, 191, 0, 0, 128, 63, 246, 140, 0, 63, 178, 54, 84, 58, 33, 200, 95, 192, 113, 0, 69, 191, 32, 152, 67, 63, 246, 140, 0, 63, 77, 54, 58, 56, 33, 200, 95, 192, 113, 0, 69, 191, 223, 78, 74, 191, 246, 140, 0, 63, 102, 51, 58, 56, 57, 185, 219, 191, 93, 226, 248, 62, 242, 154, 255, 190, 0, 0, 0, 127, 52, 48, 236, 52, 57, 185, 219, 191, 15, 68, 230, 190, 242, 154, 255, 190, 0, 0, 0, 127, 72, 40, 236, 52, 185, 81, 204, 62, 15, 68, 230, 190, 242, 154, 255, 190, 0, 0, 0, 127, 72, 40, 58, 56, 185, 81, 204, 62, 93, 226, 248, 62, 242, 154, 255, 190, 0, 0, 0, 127, 52, 48, 58, 56, 33, 200, 95, 192, 113, 0, 69, 191, 223, 78, 74, 191, 237, 107, 0, 63, 178, 54, 59, 56, 33, 200, 95, 192, 113, 0, 69, 191, 32, 152, 67, 63, 237, 107, 0, 63, 166, 56, 59, 56, 57, 185, 219, 191, 15, 68, 230, 190, 89, 139, 223, 62, 237, 107, 0, 63, 96, 56, 115, 53, 57, 185, 219, 191, 15, 68, 230, 190, 242, 154, 255, 190, 237, 107, 0, 63, 47, 55, 115, 53, 33, 200, 95, 192, 142, 230, 72, 63, 223, 78, 74, 191, 239, 0, 0, 127, 52, 49, 172, 47, 33, 200, 95, 192, 113, 0, 69, 191, 223, 78, 74, 191, 239, 0, 0, 127, 0, 0, 172, 47, 57, 185, 219, 191, 15, 68, 230, 190, 242, 154, 255, 190, 239, 0, 0, 127, 72, 40, 236, 52, 57, 185, 219, 191, 93, 226, 248, 62, 242, 154, 255, 190, 239, 0, 0, 127, 52, 48, 236, 52, 33, 200, 95, 192, 113, 0, 69, 191, 32, 152, 67, 63, 129, 107, 0, 1, 83, 58, 171, 47, 33, 200, 95, 192, 142, 230, 72, 63, 32, 152, 67, 63, 129, 107, 0, 1, 6, 57, 171, 47, 57, 185, 219, 191, 93, 226, 248, 62, 89, 139, 223, 62, 129, 107, 0, 1, 70, 57, 237, 52, 57, 185, 219, 191, 15, 68, 230, 190, 89, 139, 223, 62, 129, 107, 0, 1, 14, 58, 237, 52, 185, 81, 204, 62, 15, 68, 230, 190, 89, 139, 223, 62, 129, 0, 0, 63, 27, 59, 29, 53, 185, 81, 204, 62, 93, 226, 248, 62, 89, 139, 223, 62, 129, 0, 0, 63, 27, 59, 23, 51, 185, 81, 204, 62, 93, 226, 248, 62, 242, 154, 255, 190, 129, 0, 0, 63, 83, 58, 23, 51, 185, 81, 204, 62, 15, 68, 230, 190, 242, 154, 255, 190, 129, 0, 0, 63, 83, 58, 29, 53, 57, 185, 219, 191, 15, 68, 230, 190, 89, 139, 223, 62, 127, 127, 0, 1, 14, 58, 237, 52, 57, 185, 219, 191, 93, 226, 248, 62, 89, 139, 223, 62, 127, 127, 0, 1, 70, 57, 237, 52, 185, 81, 204, 62, 93, 226, 248, 62, 89, 139, 223, 62, 127, 127, 0, 1, 70, 57, 59, 56, 185, 81, 204, 62, 15, 68, 230, 190, 89, 139, 223, 62, 127, 127, 0, 1, 14, 58, 59, 56, 57, 185, 219, 191, 93, 226, 248, 62, 89, 139, 223, 62, 0, 129, 127, 127, 203, 51, 116, 53, 57, 185, 219, 191, 93, 226, 248, 62, 242, 154, 255, 190, 0, 129, 127, 127, 118, 53, 116, 53, 185, 81, 204, 62, 93, 226, 248, 62, 242, 154, 255, 190, 0, 129, 127, 127, 118, 53, 172, 47, 185, 81, 204, 62, 93, 226, 248, 62, 89, 139, 223, 62, 0, 129, 127, 127, 203, 51, 172, 47, 57, 185, 219, 191, 15, 68, 230, 190, 242, 154, 255, 190, 0, 127, 0, 63, 47, 55, 115, 53, 57, 185, 219, 191, 15, 68, 230, 190, 89, 139, 223, 62, 0, 127, 0, 63, 96, 56, 115, 53, 185, 81, 204, 62, 15, 68, 230, 190, 89, 139, 223, 62, 0, 127, 0, 63, 96, 56, 171, 47, 185, 81, 204, 62, 15, 68, 230, 190, 242, 154, 255, 190, 0, 127, 0, 63, 47, 55, 171, 47 ),
"array_index_data": PoolByteArray( 0, 0, 2, 0, 1, 0, 0, 0, 3, 0, 2, 0, 4, 0, 6, 0, 5, 0, 4, 0, 7, 0, 6, 0, 8, 0, 10, 0, 9, 0, 8, 0, 11, 0, 10, 0, 12, 0, 14, 0, 13, 0, 12, 0, 15, 0, 14, 0, 16, 0, 18, 0, 17, 0, 16, 0, 19, 0, 18, 0, 20, 0, 22, 0, 21, 0, 20, 0, 23, 0, 22, 0, 24, 0, 26, 0, 25, 0, 24, 0, 27, 0, 26, 0, 28, 0, 30, 0, 29, 0, 28, 0, 31, 0, 30, 0, 32, 0, 34, 0, 33, 0, 32, 0, 35, 0, 34, 0, 36, 0, 38, 0, 37, 0, 36, 0, 39, 0, 38, 0, 40, 0, 42, 0, 41, 0, 40, 0, 43, 0, 42, 0, 44, 0, 46, 0, 45, 0, 44, 0, 47, 0, 46, 0, 48, 0, 50, 0, 49, 0, 48, 0, 51, 0, 50, 0, 52, 0, 54, 0, 53, 0, 52, 0, 55, 0, 54, 0, 56, 0, 58, 0, 57, 0, 56, 0, 59, 0, 58, 0, 60, 0, 62, 0, 61, 0, 60, 0, 63, 0, 62, 0, 64, 0, 66, 0, 65, 0, 64, 0, 67, 0, 66, 0, 68, 0, 70, 0, 69, 0, 68, 0, 71, 0, 70, 0 ),
"blend_shape_data": [  ],
"format": 2194711,
"index_count": 108,
"material": SubResource( 101 ),
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 72
}

[sub_resource type="SpatialMaterial" id=3]
params_diffuse_mode = 2
albedo_texture = ExtResource( 4 )
metallic = 0.5
metallic_texture = ExtResource( 3 )
roughness = 0.0
roughness_texture = ExtResource( 1 )
normal_enabled = true
normal_scale = 7.27
normal_texture = ExtResource( 5 )
depth_enabled = true
depth_scale = 16.0
depth_deep_parallax = false
depth_flip_tangent = false
depth_flip_binormal = false
depth_texture = ExtResource( 2 )

[sub_resource type="Animation" id=80]
resource_name = "Bajar002"
length = 2.875
tracks/0/type = "transform"
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = PoolRealArray( 0, 1, 0.59959, 3.71508, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.0416667, 1, 0.59959, 3.68041, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.0833333, 1, 0.59959, 3.64711, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.125, 1, 0.59959, 3.61511, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.166667, 1, 0.59959, 3.58433, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.208333, 1, 0.59959, 3.55468, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.25, 1, 0.59959, 3.52611, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.291667, 1, 0.59959, 3.49855, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.333333, 1, 0.59959, 3.47195, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.375, 1, 0.59959, 3.44627, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.416667, 1, 0.59959, 3.42146, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.458333, 1, 0.59959, 3.39747, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.5, 1, 0.59959, 3.37428, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.541667, 1, 0.59959, 3.35184, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.583333, 1, 0.59959, 3.33012, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.625, 1, 0.59959, 3.3091, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.666667, 1, 0.59959, 3.28875, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.708333, 1, 0.59959, 3.26904, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.75, 1, 0.59959, 3.24994, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.791667, 1, 0.59959, 3.23144, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.833333, 1, 0.59959, 3.21352, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.875, 1, 0.59959, 3.19615, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.916667, 1, 0.59959, 3.17932, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.958333, 1, 0.59959, 3.16302, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1, 1, 0.59959, 3.14721, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.04167, 1, 0.59959, 3.1319, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.08333, 1, 0.59959, 3.11707, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.125, 1, 0.59959, 3.10269, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.16667, 1, 0.59959, 3.08877, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.20833, 1, 0.59959, 3.07529, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.25, 1, 0.59959, 3.06223, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.29167, 1, 0.59959, 3.0496, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.33333, 1, 0.59959, 3.03737, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.375, 1, 0.59959, 3.02554, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.41667, 1, 0.59959, 3.0141, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.45833, 1, 0.59959, 3.00304, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.5, 1, 0.59959, 2.99235, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.54167, 1, 0.59959, 2.98203, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.58333, 1, 0.59959, 2.97208, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.625, 1, 0.59959, 2.96247, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.66667, 1, 0.59959, 2.95321, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.70833, 1, 0.59959, 2.94429, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.75, 1, 0.59959, 2.93571, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.79167, 1, 0.59959, 2.92746, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.83333, 1, 0.59959, 2.91954, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.875, 1, 0.59959, 2.91194, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.91667, 1, 0.59959, 2.90466, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.95833, 1, 0.59959, 2.89769, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2, 1, 0.59959, 2.89103, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.04167, 1, 0.59959, 2.88469, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.08333, 1, 0.59959, 2.87864, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.125, 1, 0.59959, 2.8729, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.16667, 1, 0.59959, 2.86746, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.20833, 1, 0.59959, 2.86233, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.25, 1, 0.59959, 2.85749, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.29167, 1, 0.59959, 2.85294, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.33333, 1, 0.59959, 2.8487, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.375, 1, 0.59959, 2.84475, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.41667, 1, 0.59959, 2.8411, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.45833, 1, 0.59959, 2.83774, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.5, 1, 0.59959, 2.83469, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.54167, 1, 0.59959, 2.83194, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.58333, 1, 0.59959, 2.82949, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.625, 1, 0.59959, 2.82735, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.66667, 1, 0.59959, 2.82552, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.70833, 1, 0.59959, 2.82401, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.75, 1, 0.59959, 2.82281, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.79167, 1, 0.59959, 2.82195, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.83333, 1, 0.59959, 2.82142, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.875, 1, 0.59959, 2.82125, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547 )

[sub_resource type="Animation" id=79]
resource_name = "Subir005"
length = 2.45833
tracks/0/type = "transform"
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = PoolRealArray( 0, 1, 0.59959, 2.82131, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.0416667, 1, 0.59959, 2.82151, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.0833333, 1, 0.59959, 2.82187, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.125, 1, 0.59959, 2.82241, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.166667, 1, 0.59959, 2.82315, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.208333, 1, 0.59959, 2.82412, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.25, 1, 0.59959, 2.82533, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.291667, 1, 0.59959, 2.82681, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.333333, 1, 0.59959, 2.82859, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.375, 1, 0.59959, 2.83067, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.416667, 1, 0.59959, 2.83309, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.458333, 1, 0.59959, 2.83587, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.5, 1, 0.59959, 2.83903, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.541667, 1, 0.59959, 2.84259, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.583333, 1, 0.59959, 2.84657, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.625, 1, 0.59959, 2.851, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.666667, 1, 0.59959, 2.8559, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.708333, 1, 0.59959, 2.86128, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.75, 1, 0.59959, 2.86718, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.791667, 1, 0.59959, 2.8736, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.833333, 1, 0.59959, 2.88058, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.875, 1, 0.59959, 2.88813, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.916667, 1, 0.59959, 2.89628, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 0.958333, 1, 0.59959, 2.90503, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1, 1, 0.59959, 2.91442, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.04167, 1, 0.59959, 2.92446, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.08333, 1, 0.59959, 2.93517, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.125, 1, 0.59959, 2.94656, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.16667, 1, 0.59959, 2.95866, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.20833, 1, 0.59959, 2.97148, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.25, 1, 0.59959, 2.98504, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.29167, 1, 0.59959, 2.99935, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.33333, 1, 0.59959, 3.01443, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.375, 1, 0.59959, 3.03029, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.41667, 1, 0.59959, 3.04695, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.45833, 1, 0.59959, 3.06442, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.5, 1, 0.59959, 3.08272, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.54167, 1, 0.59959, 3.10185, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.58333, 1, 0.59959, 3.12183, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.625, 1, 0.59959, 3.14267, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.66667, 1, 0.59959, 3.16438, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.70833, 1, 0.59959, 3.18696, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.75, 1, 0.59959, 3.21044, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.79167, 1, 0.59959, 3.23481, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.83333, 1, 0.59959, 3.26009, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.875, 1, 0.59959, 3.28627, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.91667, 1, 0.59959, 3.31338, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 1.95833, 1, 0.59959, 3.34141, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2, 1, 0.59959, 3.37037, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.04167, 1, 0.59959, 3.40026, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.08333, 1, 0.59959, 3.4311, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.125, 1, 0.59959, 3.46287, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.16667, 1, 0.59959, 3.49559, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.20833, 1, 0.59959, 3.52926, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.25, 1, 0.59959, 3.56388, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.29167, 1, 0.59959, 3.59945, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.33333, 1, 0.59959, 3.63597, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.375, 1, 0.59959, 3.67344, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.41667, 1, 0.59959, 3.71187, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547, 2.45833, 1, 0.59959, 3.75125, 2.16322, 0, 0, 0, 1, 0.0660019, 0.640923, 0.46547 )

[sub_resource type="ConcavePolygonShape" id=81]
data = PoolVector3Array( -1, 1, -1, -3.4966, -0.7695, -0.7903, -1, -1, -1, -1, 1, -1, -3.4966, 0.7848, -0.7903, -3.4966, -0.7695, -0.7903, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -3.4966, 0.7848, 0.764, -1.7166, 0.4861, -0.4992, -3.4966, 0.7848, -0.7903, -3.4966, 0.7848, 0.764, -1.7166, 0.4861, 0.4366, -1.7166, 0.4861, -0.4992, -1, -1, 1, -3.4966, 0.7848, 0.764, -1, 1, 1, -1, -1, 1, -3.4966, -0.7695, 0.764, -3.4966, 0.7848, 0.764, -1, 1, 1, -3.4966, 0.7848, -0.7903, -1, 1, -1, -1, 1, 1, -3.4966, 0.7848, 0.764, -3.4966, 0.7848, -0.7903, -1, -1, -1, -3.4966, -0.7695, 0.764, -1, -1, 1, -1, -1, -1, -3.4966, -0.7695, -0.7903, -3.4966, -0.7695, 0.764, -1.7166, 0.4861, -0.4992, 0.3991, -0.4497, -0.4992, -1.7166, -0.4497, -0.4992, -1.7166, 0.4861, -0.4992, 0.3991, 0.4861, -0.4992, 0.3991, -0.4497, -0.4992, -3.4966, -0.7695, -0.7903, -1.7166, -0.4497, 0.4366, -3.4966, -0.7695, 0.764, -3.4966, -0.7695, -0.7903, -1.7166, -0.4497, -0.4992, -1.7166, -0.4497, 0.4366, -3.4966, 0.7848, -0.7903, -1.7166, -0.4497, -0.4992, -3.4966, -0.7695, -0.7903, -3.4966, 0.7848, -0.7903, -1.7166, 0.4861, -0.4992, -1.7166, -0.4497, -0.4992, -3.4966, -0.7695, 0.764, -1.7166, 0.4861, 0.4366, -3.4966, 0.7848, 0.764, -3.4966, -0.7695, 0.764, -1.7166, -0.4497, 0.4366, -1.7166, 0.4861, 0.4366, 0.3991, -0.4497, 0.4366, 0.3991, 0.4861, -0.4992, 0.3991, 0.4861, 0.4366, 0.3991, -0.4497, 0.4366, 0.3991, -0.4497, -0.4992, 0.3991, 0.4861, -0.4992, -1.7166, -0.4497, 0.4366, 0.3991, 0.4861, 0.4366, -1.7166, 0.4861, 0.4366, -1.7166, -0.4497, 0.4366, 0.3991, -0.4497, 0.4366, 0.3991, 0.4861, 0.4366, -1.7166, 0.4861, 0.4366, 0.3991, 0.4861, -0.4992, -1.7166, 0.4861, -0.4992, -1.7166, 0.4861, 0.4366, 0.3991, 0.4861, 0.4366, 0.3991, 0.4861, -0.4992, -1.7166, -0.4497, -0.4992, 0.3991, -0.4497, 0.4366, -1.7166, -0.4497, 0.4366, -1.7166, -0.4497, -0.4992, 0.3991, -0.4497, -0.4992, 0.3991, -0.4497, 0.4366 )

[node name="Puerta Animacion" type="MeshInstance"]
transform = Transform( 0.0660019, 0, 0, 0, 0.640923, 0, 0, 0, 0.46547, 0.59959, 3.71508, 2.16322 )
mesh = SubResource( 77 )
material/0 = SubResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Bajar.002 = SubResource( 80 )
anims/Subir.005 = SubResource( 79 )
script = ExtResource( 6 )

[node name="StaticBody" type="StaticBody" parent="."]

[node name="CollisionShape" type="CollisionShape" parent="StaticBody"]
shape = SubResource( 81 )
